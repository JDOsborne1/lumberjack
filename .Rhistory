source('~/lumberjack/data_transform.R')
library(tidyverse)
library(readr)
source("data_transform.R")
logpath <- "C:/Users/j_osborne/Documents/JDO-Logs/"
files <- list.files(path = logpath, pattern = ".txt")
logfile <- read_csv(paste0(logpath,"logfile.csv")) %>% as.data.frame()
maxdate <- ifelse(nrow(logfile) == 0, -Inf,  max(logfile$timestamp, na.rm = T))
newlogs <- as.Date(str_match(files, "\\d{2}-\\d{2}-\\d{2}"), format = "%d-%m-%y") > maxdate
files <- files[newlogs]
for (i in files){
lines <- as.vector(read_lines(paste0(logpath, i)))
x <- log_extractor(lines, i)
logfile <- rbind(logfile, x)
}
View(logfile)
logfile <- read_csv(paste0(logpath,"logfile.csv")) %>% as.data.frame()
maxdate <- ifelse(nrow(logfile) == 0, -Inf,  max(logfile$timestamp, na.rm = T))
newlogs <- as.Date(str_match(files, "\\d{2}-\\d{2}-\\d{2}"), format = "%d-%m-%y") > maxdate
files <- files[newlogs]
for (i in files){
lines <- as.vector(read_lines(paste0(logpath, i)))
x <- log_extractor(lines, i)
logfile <- rbind(logfile, x)
}
View(logfile)
logfile %>% count(jobval)
logfile %>% count(jobval) %>% View()
write_csv(logfile,paste0(logpath,"logfile.csv"))
View(logfile)
Logfile <- logfile %>%
filter(!is.na(log)) %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval)
View(Logfile)
Log_Summary <- Logfile %>%
mutate(Timelead = lead(Timestamp, default = Logfile[nrow(Logfile["Log"]),"Timestamp"])) %>%
mutate(Timediff = (Timelead - Timestamp)) %>%
group_by(Day = lubridate::wday(Timestamp, label = T), JobNumber) %>%
summarise(Timeseg = as.integer(sum(Timediff)),Seconds_spent = lubridate::as.duration(Timeseg)) %>%
filter(JobNumber != "(-)")
View(Log_Summary)
Logfile <- logfile %>%
filter(!is.na(log)) %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval) %>%
filter(Timestamp > (Sys.Date() - days(5)))
View(Logfile)
Logfile <- logfile %>%
filter(!is.na(log)) %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval) %>%
filter(Timestamp > (Sys.Date() - days(6)))
Log_Summary <- Logfile %>%
mutate(Timelead = lead(Timestamp, default = Logfile[nrow(Logfile["Log"]),"Timestamp"])) %>%
mutate(Timediff = (Timelead - Timestamp)) %>%
group_by(Day = lubridate::wday(Timestamp, label = T), JobNumber) %>%
summarise(Timeseg = as.integer(sum(Timediff)),Seconds_spent = lubridate::as.duration(Timeseg)) %>%
filter(JobNumber != "(-)")
View(Log_Summary)
PlotSubTit <- "Breakdown of hours spent in work by the Jobnumber of the billed time"
Plot_Dat <- Log_Summary %>%
rename(xBin = Day, yRate1 = Timeseg, yBin = JobNumber) %>%
mutate(yRatemin = yRate1/3600)
PlotTit <- paste0("Jobnumber composition of work time for ",Beginning)
PlotSubTit <- "Breakdown of hours spent in work by the Jobnumber of the billed time"
xlab <-  "Day of the Week"
ylab <- "Hours in the Day"
Palette <- c(magma(5, begin = 0.5, end = 1), cividis(5, begin = 0.5, end = 1), inferno(5, begin = 0.5, end = 1))
Plot <- Plot_Dat %>%
ggplot(aes(x = xBin)) +
geom_bar(aes(fill=yBin, y =yRatemin), position=position_stack(reverse=TRUE), stat="identity") +
geom_text(aes(label= round(yRatemin,3), y =yRatemin),
position=position_stack(vjust=0.5),size=3) +
scale_fill_manual(values = Palette) +
labs(title = PlotTit, subtitle = PlotSubTit, x = xlab, y = ylab, fill="") +
theme_bw() +
theme(axis.text.x=element_text(), panel.border=element_blank(), legend.position="bottom") +
scale_y_continuous()
Beginning <- min(Logfile$Timestamp)$Date
Beginning <- as.Date(min(Logfile$Timestamp))
Plot_Dat <- Log_Summary %>%
rename(xBin = Day, yRate1 = Timeseg, yBin = JobNumber) %>%
mutate(yRatemin = yRate1/3600)
PlotTit <- paste0("Jobnumber composition of work time for ",Beginning)
PlotSubTit <- "Breakdown of hours spent in work by the Jobnumber of the billed time"
xlab <-  "Day of the Week"
ylab <- "Hours in the Day"
Plot <- Plot_Dat %>%
ggplot(aes(x = xBin)) +
geom_bar(aes(fill=yBin, y =yRatemin), position=position_stack(reverse=TRUE), stat="identity") +
geom_text(aes(label= round(yRatemin,3), y =yRatemin),
position=position_stack(vjust=0.5),size=3) +
scale_fill_manual(values = Palette) +
labs(title = PlotTit, subtitle = PlotSubTit, x = xlab, y = ylab, fill="") +
theme_bw() +
theme(axis.text.x=element_text(), panel.border=element_blank(), legend.position="bottom") +
scale_y_continuous()
print(Plot)
library(viridis)
install.packages("viridis")
library(viridis)
print(Plot)
Plot <- Plot_Dat %>%
ggplot(aes(x = xBin)) +
geom_bar(aes(fill=yBin, y =yRatemin), position=position_stack(reverse=TRUE), stat="identity") +
geom_text(aes(label= round(yRatemin,3), y =yRatemin),
position=position_stack(vjust=0.5),size=3) +
scale_fill_manual(values = Palette) +
labs(title = PlotTit, subtitle = PlotSubTit, x = xlab, y = ylab, fill="") +
theme_bw() +
theme(axis.text.x=element_text(), panel.border=element_blank(), legend.position="bottom") +
scale_y_continuous()
print(Plot)
Palette <- c(magma(5, begin = 0.5, end = 1), cividis(5, begin = 0.5, end = 1), inferno(5, begin = 0.5, end = 1))
Plot <- Plot_Dat %>%
ggplot(aes(x = xBin)) +
geom_bar(aes(fill=yBin, y =yRatemin), position=position_stack(reverse=TRUE), stat="identity") +
geom_text(aes(label= round(yRatemin,3), y =yRatemin),
position=position_stack(vjust=0.5),size=3) +
scale_fill_manual(values = Palette) +
labs(title = PlotTit, subtitle = PlotSubTit, x = xlab, y = ylab, fill="") +
theme_bw() +
theme(axis.text.x=element_text(), panel.border=element_blank(), legend.position="bottom") +
scale_y_continuous()
print(Plot)
library(tidyverse)
library(readr)
source("data_transform.R")
logpath <- "C:/Users/j_osborne/Documents/JDO-Logs/"
files <- list.files(path = logpath, pattern = ".txt")
logfile <- read_csv(paste0(logpath,"logfile.csv")) %>% as.data.frame()
logfile <- head(logfile, 0)
if (nrow(logfile) == 0){
maxdate <- as.Date("2000-01-01")
} else {
maxdate <- max(logfile$timestamp, na.rm = T)
}
newlogs <- as.Date(str_match(files, "\\d{2}-\\d{2}-\\d{2}"), format = "%d-%m-%y") > maxdate
files <- files[newlogs]
files
lines <- as.vector(read_lines(paste0(logpath, i)))
for (i in files){
lines <- as.vector(read_lines(paste0(logpath, i)))
x <- log_extractor(lines, i)
logfile <- rbind(logfile, x)
}
count(logfile, is.na(log))
logfile <- logfile %>%
filter(!is.na(log))
write_csv(logfile, paste0(logpath,"logfile.csv"))
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
getwd()
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
logfile
logfile %>% View()
logfile %>% filter(timestamp > as.Date("2019-07-07")) %>% View()
write_csv(logfile, paste0(logpath,"logfile.csv"))
logfile %>% filter(timestamp > as.Date("2019-07-07")) %>% View()
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
Log_Summary <- logfile %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval, Timediff = timediff)  %>%
filter(Timestamp > as.Date("2019-07-28")) %>%
mutate(
Day = lubridate::wday(Timestamp, label = T)
, Pretty.Date = format(as.Date(Timestamp), "%d-%b")
) %>%
group_by(Pretty.Date, JobNumber) %>%
summarise(Timeseg = as.integer(sum(Timediff)),Seconds.Spent = lubridate::as.duration(Timeseg), Day = max(Day)) %>%
filter(JobNumber != "(-)") %>%
select(Pretty.Date, Day, JobNumber, Seconds.Spent) %>%
mutate(Hours.Spent = Seconds.Spent/dhours(1))
View(Log_Summary)
source('~/lumberjack/prime script.R')
Log_Summary <- logfile %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval, Timediff = timediff)  %>%
filter(Timestamp > as.Date("2019-07-28")) %>%
mutate(
Day = lubridate::wday(Timestamp, label = T)
, Pretty.Date = format(as.Date(Timestamp), "%d-%b")
)
Log_Summary <- logfile %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval, Timediff = timediff)  %>%
filter(Timestamp > as.Date("2019-07-28")) %>%
mutate(
Day = lubridate::wday(Timestamp, label = T)
, Pretty.Date = format(as.Date(Timestamp), "%d-%b")
) %>%
aggregateJobs()
View(Log_Summary)
df %>%
mutate(JobNumber = case_when(
JobNumber == "AzzuriSegmentationInternal" ~ "INTERNAL"
, JobNumber == "INTERNALAttribution" ~ "INTERNAL"
, JobNumber == "OpenData" ~ "INTERNAL"
, JobNumber == "INFOSEC" ~ "INTERNAL"
, JobNumber == "JN00000" ~ "ADMIN"
TRUE ~ JobNumber
)) %>%
return()
aggregateJobs <- function(df){
df %>%
mutate(JobNumber = case_when(
JobNumber == "AzzuriSegmentationInternal" ~ "INTERNAL"
, JobNumber == "INTERNALAttribution" ~ "INTERNAL"
, JobNumber == "OpenData" ~ "INTERNAL"
, JobNumber == "INFOSEC" ~ "INTERNAL"
, JobNumber == "JN00000" ~ "ADMIN"
TRUE ~ JobNumber
)) %>%
return()
}
aggregateJobs <- function(df){
df %>%
mutate(JobNumber = case_when(
JobNumber == "AzzuriSegmentationInternal" ~ "INTERNAL"
, JobNumber == "INTERNALAttribution" ~ "INTERNAL"
, JobNumber == "OpenData" ~ "INTERNAL"
, JobNumber == "INFOSEC" ~ "INTERNAL"
, JobNumber == "JN00000" ~ "ADMIN"
TRUE ~ JobNumber
)) %>%
return()
}
aggregateJobs <- function(df){
df %>%
mutate(JobNumber = case_when(
JobNumber == "AzzuriSegmentationInternal" ~ "INTERNAL"
, JobNumber == "INTERNALAttribution" ~ "INTERNAL"
, JobNumber == "OpenData" ~ "INTERNAL"
, JobNumber == "INFOSEC" ~ "INTERNAL"
, JobNumber == "JN00000" ~ "ADMIN"
, TRUE ~ JobNumber
)) %>%
return()
}
Log_Summary <- logfile %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval, Timediff = timediff)  %>%
filter(Timestamp > as.Date("2019-07-28")) %>%
mutate(
Day = lubridate::wday(Timestamp, label = T)
, Pretty.Date = format(as.Date(Timestamp), "%d-%b")
) %>%
aggregateJobs()
View(Log_Summary)
aggregateJobs <- function(df){
df %>%
mutate(JobNumber = case_when(
JobNumber == "(AzzuriSegmentationInternal)" ~ "(INTERNAL)"
, JobNumber == "(INTERNALAttribution)" ~ "(INTERNAL)"
, JobNumber == "(OpenData)" ~ "(INTERNAL)"
, JobNumber == "(INFOSEC)" ~ "(INTERNAL)"
, JobNumber == "(JN00000)" ~ "(ADMIN)"
, TRUE ~ JobNumber
)) %>%
return()
}
Log_Summary <- logfile %>%
rename(Timestamp = timestamp, Log = log, JobNumber = jobval, Flag = flagval, Timediff = timediff)  %>%
filter(Timestamp > as.Date("2019-07-28")) %>%
mutate(
Day = lubridate::wday(Timestamp, label = T)
, Pretty.Date = format(as.Date(Timestamp), "%d-%b")
) %>%
aggregateJobs() %>%
View
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
source('~/lumberjack/prime script.R')
